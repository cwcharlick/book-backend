{
  service: 'user-service',
  level: 'error',
  message: 'Configuration property "mongo_uri" is not defined Configuration property "mongo_uri" is not defined',
  stack: 'Error: Configuration property "mongo_uri" is not defined\n' +
    '    at Config.get (C:\\Users\\cwcha\\book-backend\\node_modules\\config\\lib\\config.js:182:11)\n' +
    '    at module.exports (C:\\Users\\cwcha\\book-backend\\startup\\database.js:9:22)\n' +
    '    at Object.<anonymous> (C:\\Users\\cwcha\\book-backend\\app.js:17:30)\n' +
    '    at Module._compile (internal/modules/cjs/loader.js:1068:30)\n' +
    '    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\n' +
    '    at Module.load (internal/modules/cjs/loader.js:933:32)\n' +
    '    at Function.Module._load (internal/modules/cjs/loader.js:774:14)\n' +
    '    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n' +
    '    at internal/main/run_main_module.js:17:47',
  timestamp: '2021-07-22 16:12:43'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:13:32'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:13:32'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:15:05'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:15:05'
}
{
  level: 'error',
  message: 'this.restaurants.populate is not a function this.restaurants.populate is not a function',
  stack: 'TypeError: this.restaurants.populate is not a function\n' +
    '    at model.userSchema.methods.generateAuthToken (C:\\Users\\cwcha\\book-backend\\models\\user.js:37:37)\n' +
    '    at C:\\Users\\cwcha\\book-backend\\routes\\auth.js:31:24\n' +
    '    at async C:\\Users\\cwcha\\book-backend\\middleware\\async.js:7:7',
  timestamp: '2021-07-22 16:17:02'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:18:09'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:18:09'
}
{
  level: 'error',
  message: 'this.restaurants[0].populate is not a function this.restaurants[0].populate is not a function',
  stack: 'TypeError: this.restaurants[0].populate is not a function\n' +
    '    at model.userSchema.methods.generateAuthToken (C:\\Users\\cwcha\\book-backend\\models\\user.js:37:40)\n' +
    '    at C:\\Users\\cwcha\\book-backend\\routes\\auth.js:31:24\n' +
    '    at async C:\\Users\\cwcha\\book-backend\\middleware\\async.js:7:7',
  timestamp: '2021-07-22 16:18:18'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:19:03'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:19:03'
}
{
  level: 'error',
  message: 'this.restaurants[0].populate is not a function this.restaurants[0].populate is not a function',
  stack: 'TypeError: this.restaurants[0].populate is not a function\n' +
    '    at model.userSchema.methods.generateAuthToken (C:\\Users\\cwcha\\book-backend\\models\\user.js:37:40)\n' +
    '    at C:\\Users\\cwcha\\book-backend\\routes\\auth.js:31:24\n' +
    '    at async C:\\Users\\cwcha\\book-backend\\middleware\\async.js:7:7',
  timestamp: '2021-07-22 16:19:05'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:19:11'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:19:11'
}
{
  level: 'error',
  message: 'this.restaurants[0].populate is not a function this.restaurants[0].populate is not a function',
  stack: 'TypeError: this.restaurants[0].populate is not a function\n' +
    '    at model.userSchema.methods.generateAuthToken (C:\\Users\\cwcha\\book-backend\\models\\user.js:37:40)\n' +
    '    at C:\\Users\\cwcha\\book-backend\\routes\\auth.js:31:24\n' +
    '    at async C:\\Users\\cwcha\\book-backend\\middleware\\async.js:7:7',
  timestamp: '2021-07-22 16:19:12'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:19:49'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:19:49'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:20:58'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:20:58'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:22:56'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:22:57'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:23:37'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:23:38'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:25:57'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:25:57'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:27:06'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:27:06'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:27:40'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:27:40'
}
{
  level: 'error',
  message: 'restaurants is not defined restaurants is not defined',
  stack: 'ReferenceError: restaurants is not defined\n' +
    '    at C:\\Users\\cwcha\\book-backend\\routes\\auth.js:20:7\n' +
    '    at C:\\Users\\cwcha\\book-backend\\middleware\\async.js:7:13\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at next (C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n' +
    '    at Route.dispatch (C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\index.js:281:22\n' +
    '    at Function.process_params (C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n' +
    '    at next (C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n' +
    '    at Function.handle (C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n' +
    '    at router (C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\index.js:317:13)\n' +
    '    at C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\index.js:284:7\n' +
    '    at Function.process_params (C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n' +
    '    at next (C:\\Users\\cwcha\\book-backend\\node_modules\\express\\lib\\router\\index.js:275:10)',
  timestamp: '2021-07-22 16:27:43'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2021-07-22 16:28:54'
}
{
  message: 'Connected to MongoDB...',
  level: 'info',
  timestamp: '2021-07-22 16:28:54'
}
